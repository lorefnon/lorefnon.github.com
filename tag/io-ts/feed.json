{
    "version": "https://jsonfeed.org/version/1",
    "title": "Icicles of Thought • All posts by \"io-ts\" tag",
    "description": "",
    "home_page_url": "https://lorefnon.me",
    "items": [
        {
            "id": "https://lorefnon.me/2019/08/11/enforcing-runtime-validations-at-compile-time-in-typescript/",
            "url": "https://lorefnon.me/2019/08/11/enforcing-runtime-validations-at-compile-time-in-typescript/",
            "title": "Enforcing runtime validations at compile time in TypeScript",
            "date_published": "2019-08-11T00:00:00.000Z",
            "content_html": "<link rel=\"stylesheet\" href=\"/css/crayon.min.css\" >\n<link rel=\"stylesheet\" href=\"/css/crayon-flatui-light.css\" >\n\n\n\n\t<p>The title may sound something like an oxymoron, so perhaps some clarification is needed.</p>\n<p>I freqently deal with operations against databases. When I mention that I increasingly prefer using a functional style, in particular, using a query builder directly as opposed to an ORM – one of the primary concerns brought up by people is that ORMs can ensure that data validations are performed for every operation that performs a mutation against the data source.</p>\n<p>This post is not much of a rant against ORMs. It is a practical outline of how we can utilize types to ensure (at compile time) that our data access layer only allows validated data. Even if the actual validation happens at runtime.</p>\n<p><span id=\"more-582\"></span></p>\n<p>Let’s say we have a <code>User</code> type:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471174ce777419878\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471174ce777419878-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174ce777419878-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174ce777419878-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174ce777419878-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174ce777419878-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174ce777419878-6\">6</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471174ce777419878-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174ce777419878-2\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">User</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174ce777419878-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">name</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174ce777419878-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">email</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174ce777419878-5\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174ce777419878-6\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0027 seconds] -->\n<p></p>\n<p>Now assume that we have a function <code>enrollUser</code> where we only want to allow valid users. If our function takes a <code>User</code> object:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471174da405233932\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471174da405233932-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174da405233932-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174da405233932-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174da405233932-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174da405233932-5\">5</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471174da405233932-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174da405233932-2\"><span class=\"crayon-e\">export </span><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">enrollUser</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">async</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">user</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">User</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174da405233932-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-c\">// ... enrollment logic</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174da405233932-4\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174da405233932-5\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0005 seconds] -->\n<p></p>\n<p>In the above, it is possible for this function to be called with either a valid or an invalid user and it is up to consumers invoking this function to ensure that this is called after validating, which can be error prone in larger applications.</p>\n<p>So, lets try to enforce at the type level that this function will only consume valid users. We can do something like:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471174de983989256\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471174de983989256-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174de983989256-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174de983989256-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174de983989256-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174de983989256-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174de983989256-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174de983989256-7\">7</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471174de983989256-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174de983989256-2\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">Valid</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">&amp;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">_isValid</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">true</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174de983989256-3\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174de983989256-4\"><span class=\"crayon-e\">export </span><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">enrollUser</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">user</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Valid</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">User</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174de983989256-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-c\">// ... enrollment logic</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174de983989256-6\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174de983989256-7\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0010 seconds] -->\n<p></p>\n<p>Now, our validator functions will have to tell the compiler that a user is indeed valid:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471174e2193180767\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e2193180767-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e2193180767-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e2193180767-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e2193180767-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e2193180767-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e2193180767-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e2193180767-7\">7</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471174e2193180767-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174e2193180767-2\"><span class=\"crayon-e\">export </span><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">validateUser</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">user</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">User</span><span class=\"crayon-sy\">)</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">user </span><span class=\"crayon-st\">is</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Valid</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">User</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e2193180767-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-st\">if</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">(</span><span class=\"crayon-o\">!</span><span class=\"crayon-v\">user</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">email</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">||</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">!</span><span class=\"crayon-v\">user</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">email</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">match</span><span class=\"crayon-sy\">(</span><span class=\"crayon-o\">/</span><span class=\"crayon-o\">^</span><span class=\"crayon-sy\">\\</span><span class=\"crayon-v\">S</span><span class=\"crayon-o\">+</span><span class=\"crayon-sy\">@</span><span class=\"crayon-sy\">\\</span><span class=\"crayon-v\">S</span><span class=\"crayon-o\">+</span><span class=\"crayon-sy\">$</span><span class=\"crayon-o\">/</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-st\">return</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">false</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e2193180767-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-c\">// (Don't use that regex in real applications).</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e2193180767-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-st\">return</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">true</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e2193180767-6\"><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e2193180767-7\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0014 seconds] -->\n<p></p>\n<p><code>validateUser</code> here acts as <a class=\"wp-editor-md-post-content-link\" href=\"https://basarat.gitbooks.io/typescript/docs/types/typeGuard.html\">type-guard</a> telling the compiler if the user complies to <code>Valid&lt;User&gt;</code> type.</p>\n<p>So, now if we try to invoke enrollUser with a user that has not been validated we will get an error:</p>\n<p><img src=\"/wp-content/uploads/2019/08/enrolluser.png\" alt=\"\"></p>\n<p>But if we validate it first, the error goes away:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471174e5655426667\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e5655426667-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e5655426667-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e5655426667-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e5655426667-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e5655426667-5\">5</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471174e5655426667-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174e5655426667-2\"><span class=\"crayon-st\">if</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">(</span><span class=\"crayon-e\">validateUser</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">user</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e5655426667-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-e\">enrollUser</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">user</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e5655426667-4\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e5655426667-5\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0005 seconds] -->\n<p></p>\n<p>There is one caveat with this approach though:</p>\n<p>Our type-guard is lying to the compiler and the compiler believes that lie unconditionally:</p>\n<p><img src=\"/wp-content/uploads/2019/08/userisvalidproperty.png\" alt=\"\"></p>\n<p>Here TypeScript is telling us that we have an <code>_isValid</code> property in user but that is not exactly true, because that property will not be present at runtime. So if someone comes to rely on a runtime check on that property, the check will fail at runtime. So effectively we have traded possibility of one runtime fault for another.</p>\n<p>We can do a couple of things to prevent this. The obvious one is to actually have a <code>_isValid</code> property in the object. Or to wrap the type of objects being validated (so that the primary record type can be directly serialized):</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471174e8354605648\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-9\">9</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-2\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Validated</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">TTarget</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">TValid</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">boolean</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">target</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">TTarget</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">isValid</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">TValid</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-5\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-6\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-7\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">Valid</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">TTarget</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Validated</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">TTarget</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">true</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-8\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">Invalid</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">TTarget</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Validated</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">TTarget</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">false</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-9\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0015 seconds] -->\n<p></p>\n<p>However, ff we don’t want any runtime overhead at all, instead of a string property we can use a <a class=\"wp-editor-md-post-content-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">symbol</a>:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471174eb758520154\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471174eb758520154-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174eb758520154-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174eb758520154-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174eb758520154-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174eb758520154-5\">5</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471174eb758520154-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174eb758520154-2\"><span class=\"crayon-r\">declare</span><span class=\"crayon-h\"> </span><span class=\"crayon-m\">const</span><span class=\"crayon-v\"> isValid:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">unique </span><span class=\"crayon-v\">symbol</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174eb758520154-3\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174eb758520154-4\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">Valid</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">&amp;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">isValid</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">true</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174eb758520154-5\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0008 seconds] -->\n<p></p>\n<p>The benefit of using a symbol is that, as long as this symbol is not exported from the containing module or namespace, it will not be possible to use it at runtime. <a class=\"wp-editor-md-post-content-link\" href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html\">TypeScript 2.7 release announcements</a> go into more details on type level treatment of unique symbols.</p>\n<p>No other symbol (even if they have the same name) will be equal to this symbol. This will hold true even if <code>Symbol</code> is polyfilled.</p>\n<p><img src=\"/wp-content/uploads/2019/08/symbolduplicate.png\" alt=\"\"></p>\n<p>TypeScript autocompletion will not show this as a completion candidate, eliminating the possibility of accidental usage:</p>\n<p><img src=\"/wp-content/uploads/2019/08/symbolcompletions.png\" alt=\"\"></p>\n\n\n    ",
            "tags": [
                "Typescript",
                "io-ts"
            ]
        }
    ]
}